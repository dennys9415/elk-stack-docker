input {
  # Beats input for Filebeat
  beats {
    port => 5044
    ssl => false
  }
  
  # TCP input for raw logs
  tcp {
    port => 5000
    codec => json_lines
  }
  
  # HTTP input for REST API logs
  http {
    port => 8080
    codec => json
  }
}

filter {
  # Parse JSON messages
  if [message] =~ /^{.*}$/ {
    json {
      source => "message"
      target => "json_content"
    }
  }
  
  # Parse Apache logs
  if [fileset][name] == "apache" {
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
      target => "@timestamp"
    }
  }
  
  # Parse system logs
  if [fileset][name] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
      target => "@timestamp"
    }
  }
  
  # Add host information
  mutate {
    add_field => { 
      "host_ip" => "%{host}[ip]"
      "host_name" => "%{host}[name]"
    }
  }
  
  # Remove unnecessary fields
  mutate {
    remove_field => [ "headers" ]
  }
}

output {
  # Primary output to Elasticsearch
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "logstash-%{+YYYY.MM.dd}"
    document_id => "%{[@metadata][fingerprint]}"
    template => "/usr/share/logstash/templates/elasticsearch-template.json"
    template_name => "logstash"
    template_overwrite => true
  }
  
  # Fallback output to stdout for debugging
  stdout { 
    codec => rubydebug 
  }
}